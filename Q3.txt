object scala_5_Q_3 extends App{
class Account(id:String, n: Int, b: Double){

    val nic:String = id
    val accNumber: Int = n
    var balance: Double = b

    override def toString: String = "[" + nic + ":" + accNumber + ":" + balance + "]"

    def withdraw(a: Double): Unit = this.balance -= a   //assuming an account can have negative balances
    def deposit(a: Double): Unit = this.balance += a
    def transfer(acc: Account, b: Double) = {
      this.withdraw(b)
      acc.deposit(b)
    }
  }

  println("Question 3...")
  val b = new Account("981910800", 18001866, 25000)
  println("Account created -> "+ b.toString)
  b.deposit(5000)
  println("Credited 5000 to " + b.accNumber + " -> " + b.toString)
  b.withdraw(2000)
  println("Debited 2000 from " + b.accNumber + " -> " + b.toString)

  val c = new Account("588331432", 18001456, 10000)
  println("Account created -> " + c.toString)
  b.transfer(c,5000)
  println("Transferring 5000 from " + b.accNumber + " to " + c.accNumber + "...")
  println("Debited 5000 from " + b.accNumber + " -> " + b.toString)
  println("Credited 5000 to " + c.accNumber + " -> " + c.toString)
  println()
}